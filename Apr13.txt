"1. Find the maximum element in each row and each column in a matrix

----->>

2. Search a sorted 2D Matrix
---->>
https://leetcode.com/problems/search-a-2d-matrix-ii/

class Solution {
    public boolean searchMatrix(int[][] arr, int target) {
        
        int i=0;
        int j=arr[0].length-1;
        
        
        while(i<=arr[0].length-1 && j>=0)
        {
            
            if(arr[i][j]==target)
                return true;
            
            else if(arr[i][j]<target)
                i++;
            
            else 
                j--;
            
        }
        return false;
    }
}



3. Find the duplicate number

https://leetcode.com/problems/find-the-duplicate-number/

Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

 
Input: nums = [1,3,4,2,2]
Output: 2

Input: nums = [3,1,3,4,2]
Output: 3"

--->>
package Apr13;

public class PrintDuplicate {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		int[] a = {3,1,3,4,2};

		for (int i = 0; i < a.length; i++) {
			for (int j = i + 1; j < a.length; j++) {
				if (a[i] == a[j]) {
					System.out.println(a[i]);
					break;
				}

			}
	
		
		}

	}

}
